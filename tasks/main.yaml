---

- name: Test distribution
  assert:
    that: >
      ansible_os_family == 'RedHat' or
      ansible_os_family == 'Debian'

- name: Add YUM repo
  yum_repository:
    name: influx
    description: Influx YUM repo
    baseurl: "{{ telegraf_yumrepo_url }}"
    gpgkey: "{{ telegraf_yumrepo_gpgkey }}"
  when: >
    ansible_os_family == 'RedHat'
  tags:
    - telegraf_pkg

- name: Add APT key
  apt_key:
    url: "{{ telegraf_apt_repo_key }}"
    state: present
    validate_certs: "{{ 'no' if ansible_python_version | version_compare('2.7.9', '<') else omit }}"
  when: >
    ansible_os_family == 'Debian' and
    ansible_python_version | version_compare('2.7.9', '>=')
  tags:
    - telegraf_pkg

- name: Add APT key fallback - check
  shell: env apt-key list | grep 'InfluxDB Packaging Service'
  failed_when: false
  changed_when: false
  register: telegraf_apt_repo_key_check
  when: >
    ansible_os_family == 'Debian' and
    ansible_python_version | version_compare('2.7.9', '<')
  tags:
    - telegraf_pkg

- name: Add APT key fallback
  shell: env curl {{ telegraf_apt_repo_key }} | apt-key add -
  when: >
    ansible_os_family == 'Debian' and
    telegraf_apt_repo_key_check.rc != 0 and
    ansible_python_version | version_compare('2.7.9', '<')
  tags:
    - telegraf_pkg

- name: Add APT repository
  apt_repository:
    filename: influx
    repo: "{{ telegraf_apt_repo_string }}"
    validate_certs: "{{ 'no' if ansible_python_version | version_compare('2.7.9', '<') else omit }}"
  when: >
    ansible_os_family == 'Debian'
  tags:
    - telegraf_pkg

- name: Install Telegraf package
  package:
    name: "{{ telegraf_pkg }}"
  notify:
    - Restart Telegraf service
  tags:
    - telegraf_pkg

- name: Create Telegraf configuration file
  template:
    src: telegraf.conf.j2
    dest: "{{ telegraf_config_file }}"
    owner: "{{ telegraf_owner }}"
    group: "{{ telegraf_group }}"
    mode: "{{ telegraf_mode }}"
  notify:
    - Restart Telegraf service
  tags:
    - telegraf_config

- name: Make sure Telegraf service is enabled
  service:
    name: "{{ telegraf_service }}"
    enabled: yes

- name: Make sure Telegraf service is running
  service:
    name: "{{ telegraf_service }}"
    state: started
  register: telegraf_service_started
